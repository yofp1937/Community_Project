{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Project\\\\Community_Project\\\\client\\\\src\\\\Pages\\\\PostWrite\\\\PostWrite.js\";\nimport React from 'react';\nimport styles from './PostWrite.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostWrite() {\n  const handleWrite = async () => {\n    // 아이디, 패스워드 입력 안돼있으면 return\n    if (id === \"\") {\n      alert(\"아이디를 입력해주세요.\");\n      return;\n    }\n    if (password === \"\") {\n      alert(\"비밀번호를 입력해주세요.\");\n      return;\n    }\n\n    // 조건 만족하면 서버로 로그인 요청\n    try {\n      const response = await axios.post('/api/login', {\n        id: id,\n        password: password\n      });\n      if (response.data.success) {\n        // response에 success값이 true로 넘어오면 localStorage에 id, nickname, token 값 생성해서 로그인상태 유지\n        localStorage.clear();\n        localStorage.setItem('id', response.data.id);\n        localStorage.setItem('nickname', response.data.nickname);\n        localStorage.setItem('token', response.data.token);\n        window.location.href = '/';\n      }\n    } catch (error) {\n      if (error.response.data.message) {\n        alert(\"에러: \" + error.response.data.message);\n      } else {\n        alert(\"에러 발생\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.postwrite,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: styles.input_title,\n      placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694(\\uCD5C\\uB300 20\\uAE00\\uC790)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: styles.input_content,\n      placeholder: \"\\uAE00 \\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 79\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.btn_submit,\n      onClick: handleWrite,\n      children: \"\\uB4F1\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_c = PostWrite;\nexport default PostWrite;\nvar _c;\n$RefreshReg$(_c, \"PostWrite\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","PostWrite","handleWrite","id","alert","password","response","axios","post","data","success","localStorage","clear","setItem","nickname","token","window","location","href","error","message","className","postwrite","children","type","input_title","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","input_content","btn_submit","onClick","_c","$RefreshReg$"],"sources":["D:/Web Project/Community_Project/client/src/Pages/PostWrite/PostWrite.js"],"sourcesContent":["import React from 'react';\r\nimport styles from './PostWrite.module.css';\r\n\r\nfunction PostWrite() {\r\n\r\n    const handleWrite = async () => {\r\n    \r\n        // 아이디, 패스워드 입력 안돼있으면 return\r\n        if(id===\"\"){\r\n          alert(\"아이디를 입력해주세요.\");\r\n          return;\r\n        }\r\n        if(password===\"\"){\r\n          alert(\"비밀번호를 입력해주세요.\");\r\n          return;\r\n        }\r\n    \r\n        // 조건 만족하면 서버로 로그인 요청\r\n        try {\r\n          const response = await axios.post('/api/login', {\r\n            id: id,\r\n            password: password,\r\n          });\r\n    \r\n          if(response.data.success){ // response에 success값이 true로 넘어오면 localStorage에 id, nickname, token 값 생성해서 로그인상태 유지\r\n            localStorage.clear();\r\n            localStorage.setItem('id', response.data.id);\r\n            localStorage.setItem('nickname', response.data.nickname);\r\n            localStorage.setItem('token', response.data.token);\r\n            window.location.href = '/';\r\n          } \r\n    \r\n        } catch (error) {\r\n          if (error.response.data.message) {\r\n            alert(\"에러: \" + error.response.data.message);\r\n          } else {\r\n            alert(\"에러 발생\");\r\n          }\r\n        }\r\n    \r\n      };\r\n\r\n  return (\r\n    <div className={styles.postwrite}>\r\n        <input type=\"text\" className={styles.input_title} placeholder='제목을 입력하세요(최대 20글자)'/>\r\n        <hr/>\r\n        <textarea className={styles.input_content} placeholder='글 내용을 입력하세요'/><br/>\r\n        <hr/>\r\n        <button type=\"button\" className={styles.btn_submit} onClick={handleWrite}>등록</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostWrite;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,SAASA,CAAA,EAAG;EAEjB,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAE5B;IACA,IAAGC,EAAE,KAAG,EAAE,EAAC;MACTC,KAAK,CAAC,cAAc,CAAC;MACrB;IACF;IACA,IAAGC,QAAQ,KAAG,EAAE,EAAC;MACfD,KAAK,CAAC,eAAe,CAAC;MACtB;IACF;;IAEA;IACA,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,YAAY,EAAE;QAC9CL,EAAE,EAAEA,EAAE;QACNE,QAAQ,EAAEA;MACZ,CAAC,CAAC;MAEF,IAAGC,QAAQ,CAACG,IAAI,CAACC,OAAO,EAAC;QAAE;QACzBC,YAAY,CAACC,KAAK,CAAC,CAAC;QACpBD,YAAY,CAACE,OAAO,CAAC,IAAI,EAAEP,QAAQ,CAACG,IAAI,CAACN,EAAE,CAAC;QAC5CQ,YAAY,CAACE,OAAO,CAAC,UAAU,EAAEP,QAAQ,CAACG,IAAI,CAACK,QAAQ,CAAC;QACxDH,YAAY,CAACE,OAAO,CAAC,OAAO,EAAEP,QAAQ,CAACG,IAAI,CAACM,KAAK,CAAC;QAClDC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;MAC5B;IAEF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,IAAIA,KAAK,CAACb,QAAQ,CAACG,IAAI,CAACW,OAAO,EAAE;QAC/BhB,KAAK,CAAC,MAAM,GAAGe,KAAK,CAACb,QAAQ,CAACG,IAAI,CAACW,OAAO,CAAC;MAC7C,CAAC,MAAM;QACLhB,KAAK,CAAC,OAAO,CAAC;MAChB;IACF;EAEF,CAAC;EAEL,oBACEJ,OAAA;IAAKqB,SAAS,EAAEvB,MAAM,CAACwB,SAAU;IAAAC,QAAA,gBAC7BvB,OAAA;MAAOwB,IAAI,EAAC,MAAM;MAACH,SAAS,EAAEvB,MAAM,CAAC2B,WAAY;MAACC,WAAW,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACpF9B,OAAA;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACL9B,OAAA;MAAUqB,SAAS,EAAEvB,MAAM,CAACiC,aAAc;MAACL,WAAW,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAAA9B,OAAA;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3E9B,OAAA;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACL9B,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAACH,SAAS,EAAEvB,MAAM,CAACkC,UAAW;MAACC,OAAO,EAAE/B,WAAY;MAAAqB,QAAA,EAAC;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpF,CAAC;AAEV;AAACI,EAAA,GAhDQjC,SAAS;AAkDlB,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}