{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Project\\\\Community_Project\\\\client\\\\src\\\\Pages\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './Login.module.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [id, setId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleLogin = async () => {\n    // 아이디, 패스워드 입력 안돼있으면 return\n    if (id === \"\") {\n      alert(\"아이디를 입력해주세요.\");\n      return;\n    }\n    if (password === \"\") {\n      alert(\"비밀번호를 입력해주세요.\");\n      return;\n    }\n\n    // 조건 만족하면 서버로 로그인 요청\n    try {\n      const response = await axios.post('/api/login', {\n        id: id,\n        password: password\n      });\n      if (response.data.success) {\n        // response에 success값이 true로 넘어오면 localStorage에 id, nickname, token 값 생성해서 로그인상태 유지\n        localStorage.clear();\n        localStorage.setItem('id', response.data.id);\n        localStorage.setItem('nickname', response.data.nickname);\n        localStorage.setItem('token', response.data.token);\n        window.location.href = '/';\n      }\n    } catch (error) {\n      if (error.response.data.message) {\n        alert(\"에러: \" + error.response.data.message);\n      } else {\n        alert(\"에러 발생\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.login,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: styles.input_id,\n      placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n      onChange: e => setId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 123\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: styles.input_pwd,\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 135\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: styles.submit,\n      onClick: handleLogin,\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"q6YKsEiQbB/HjLDjguOyUUblDf0=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","styles","axios","jsxDEV","_jsxDEV","Login","_s","id","setId","password","setPassword","handleLogin","alert","response","post","data","success","localStorage","clear","setItem","nickname","token","window","location","href","error","message","className","login","children","type","input_id","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","input_pwd","submit","onClick","_c","$RefreshReg$"],"sources":["D:/Web Project/Community_Project/client/src/Pages/Login/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './Login.module.css';\r\nimport axios from 'axios';\r\n\r\nfunction Login() {\r\n  const [id, setId] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const handleLogin = async () => {\r\n    \r\n    // 아이디, 패스워드 입력 안돼있으면 return\r\n    if(id===\"\"){\r\n      alert(\"아이디를 입력해주세요.\");\r\n      return;\r\n    }\r\n    if(password===\"\"){\r\n      alert(\"비밀번호를 입력해주세요.\");\r\n      return;\r\n    }\r\n\r\n    // 조건 만족하면 서버로 로그인 요청\r\n    try {\r\n      const response = await axios.post('/api/login', {\r\n        id: id,\r\n        password: password,\r\n      });\r\n\r\n      if(response.data.success){ // response에 success값이 true로 넘어오면 localStorage에 id, nickname, token 값 생성해서 로그인상태 유지\r\n        localStorage.clear();\r\n        localStorage.setItem('id', response.data.id);\r\n        localStorage.setItem('nickname', response.data.nickname);\r\n        localStorage.setItem('token', response.data.token);\r\n        window.location.href = '/';\r\n      } \r\n\r\n    } catch (error) {\r\n      if (error.response.data.message) {\r\n        alert(\"에러: \" + error.response.data.message);\r\n      } else {\r\n        alert(\"에러 발생\");\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <div className={styles.login}>\r\n        <input type=\"text\" className={styles.input_id} placeholder=\"아이디를 입력해주세요\" onChange={(e) => setId(e.target.value)}/><br/>\r\n        <input type=\"password\" className={styles.input_pwd} placeholder=\"비밀번호를 입력해주세요\" onChange={(e) => setPassword(e.target.value)}/><br/>\r\n        <button type=\"submit\" className={styles.submit} onClick={handleLogin}>로그인</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}